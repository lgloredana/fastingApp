"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/client-storage.ts":
/*!*******************************!*\
  !*** ./lib/client-storage.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllData: () => (/* binding */ clearAllData),\n/* harmony export */   endFastingSession: () => (/* binding */ endFastingSession),\n/* harmony export */   exportFastingDataAsFile: () => (/* binding */ exportFastingDataAsFile),\n/* harmony export */   getCurrentSession: () => (/* binding */ getCurrentSession),\n/* harmony export */   getFastingHistory: () => (/* binding */ getFastingHistory),\n/* harmony export */   getFastingStats: () => (/* binding */ getFastingStats),\n/* harmony export */   importFastingDataFromFile: () => (/* binding */ importFastingDataFromFile),\n/* harmony export */   readFastingData: () => (/* binding */ readFastingData),\n/* harmony export */   saveFastingData: () => (/* binding */ saveFastingData),\n/* harmony export */   startFastingSession: () => (/* binding */ startFastingSession),\n/* harmony export */   updateSessionStartTime: () => (/* binding */ updateSessionStartTime)\n/* harmony export */ });\n// Client-side storage utilities for fasting data (browser-compatible)\nconst STORAGE_KEY = 'fasting-app-data';\n// Default data structure\nconst getDefaultData = ()=>({\n        currentSession: null,\n        sessions: [],\n        totalSessions: 0,\n        totalFastingTime: 0\n    });\n// Read fasting data from localStorage\nconst readFastingData = ()=>{\n    if (false) {}\n    try {\n        const data = localStorage.getItem(STORAGE_KEY);\n        if (!data) {\n            return getDefaultData();\n        }\n        return JSON.parse(data);\n    } catch (error) {\n        console.error('Error reading fasting data:', error);\n        return getDefaultData();\n    }\n};\n// Save fasting data to localStorage\nconst saveFastingData = (data)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    } catch (error) {\n        console.error('Error saving fasting data:', error);\n        throw error;\n    }\n};\n// Start a new fasting session\nconst startFastingSession = ()=>{\n    const data = readFastingData();\n    const newSession = {\n        id: \"session-\".concat(Date.now()),\n        startTime: Date.now(),\n        createdAt: Date.now()\n    };\n    data.currentSession = newSession;\n    saveFastingData(data);\n    return newSession;\n};\n// End the current fasting session\nconst endFastingSession = (notes)=>{\n    const data = readFastingData();\n    if (!data.currentSession) {\n        return null;\n    }\n    const endTime = Date.now();\n    const duration = endTime - data.currentSession.startTime;\n    const completedSession = {\n        ...data.currentSession,\n        endTime,\n        duration,\n        notes\n    };\n    // Add to sessions history\n    data.sessions.unshift(completedSession); // Add to beginning for recent-first order\n    data.totalSessions += 1;\n    data.totalFastingTime += duration;\n    data.currentSession = null;\n    saveFastingData(data);\n    return completedSession;\n};\n// Get current session\nconst getCurrentSession = ()=>{\n    const data = readFastingData();\n    return data.currentSession;\n};\n// Update current session start time\nconst updateSessionStartTime = (newStartTime)=>{\n    const data = readFastingData();\n    if (!data.currentSession) {\n        return null;\n    }\n    const updatedSession = {\n        ...data.currentSession,\n        startTime: newStartTime\n    };\n    data.currentSession = updatedSession;\n    saveFastingData(data);\n    return updatedSession;\n};\n// Get fasting history\nconst getFastingHistory = ()=>{\n    const data = readFastingData();\n    return data.sessions;\n};\n// Get fasting statistics\nconst getFastingStats = ()=>{\n    const data = readFastingData();\n    const avgFastingTime = data.totalSessions > 0 ? data.totalFastingTime / data.totalSessions : 0;\n    const longestFast = data.sessions.reduce((longest, session)=>{\n        return (session.duration || 0) > longest ? session.duration || 0 : longest;\n    }, 0);\n    return {\n        totalSessions: data.totalSessions,\n        totalFastingTime: data.totalFastingTime,\n        averageFastingTime: avgFastingTime,\n        longestFast\n    };\n};\n// Export data for backup (download as JSON file)\nconst exportFastingDataAsFile = ()=>{\n    const data = readFastingData();\n    const jsonString = JSON.stringify(data, null, 2);\n    const blob = new Blob([\n        jsonString\n    ], {\n        type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = \"fasting-data-backup-\".concat(new Date().toISOString().split('T')[0], \".json\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n};\n// Import data from file\nconst importFastingDataFromFile = (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            try {\n                var _e_target;\n                const jsonString = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n                const data = JSON.parse(jsonString);\n                saveFastingData(data);\n                resolve();\n            } catch (error) {\n                reject(new Error('Invalid file format'));\n            }\n        };\n        reader.onerror = ()=>{\n            reject(new Error('Error reading file'));\n        };\n        reader.readAsText(file);\n    });\n};\n// Clear all data\nconst clearAllData = ()=>{\n    if (true) {\n        localStorage.removeItem(STORAGE_KEY);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/client-storage.ts\n"));

/***/ })

});